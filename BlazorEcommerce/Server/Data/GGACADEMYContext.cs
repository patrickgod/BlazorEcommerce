// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace BlazorEcommerce.Server.Data
{
    public partial class GGACADEMYContext : DbContext
    {
        public GGACADEMYContext()
        {
        }

        public GGACADEMYContext(DbContextOptions<GGACADEMYContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Class> Class { get; set; }
        public virtual DbSet<Finance> Finance { get; set; }
        public virtual DbSet<Months> Months { get; set; }
        public virtual DbSet<Person> Person { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Class>(entity =>
            {
                entity.ToTable("CLASS");

                entity.Property(e => e.Classid)
                    .ValueGeneratedNever()
                    .HasColumnName("CLASSID");

                entity.Property(e => e.Classname).HasColumnName("CLASSNAME");

                entity.Property(e => e.Note).HasColumnName("NOTE");

                entity.Property(e => e.Personid).HasColumnName("PERSONID");

                entity.HasOne(d => d.Person)
                    .WithMany(p => p.Class)
                    .HasForeignKey(d => d.Personid)
                    .HasConstraintName("FK_CLASS_PERSON");
            });

            modelBuilder.Entity<Finance>(entity =>
            {
                entity.ToTable("FINANCE");

                entity.Property(e => e.Financeid)
                    .ValueGeneratedNever()
                    .HasColumnName("FINANCEID");

                entity.Property(e => e.Ispaid).HasColumnName("ISPAID");

                entity.Property(e => e.Lastpaymentdate)
                    .HasColumnType("date")
                    .HasColumnName("LASTPAYMENTDATE");

                entity.Property(e => e.Monthid).HasColumnName("MONTHID");

                entity.Property(e => e.Note).HasColumnName("NOTE");

                entity.Property(e => e.Paymentdate)
                    .HasColumnType("date")
                    .HasColumnName("PAYMENTDATE");

                entity.Property(e => e.Personid).HasColumnName("PERSONID");

                entity.HasOne(d => d.Month)
                    .WithMany(p => p.Finance)
                    .HasForeignKey(d => d.Monthid)
                    .HasConstraintName("FK_FINANCE_MONTHS");

                entity.HasOne(d => d.Person)
                    .WithMany(p => p.Finance)
                    .HasForeignKey(d => d.Personid)
                    .HasConstraintName("FK_FINANCE_PERSON");
            });

            modelBuilder.Entity<Months>(entity =>
            {
                entity.HasKey(e => e.Monthid);

                entity.ToTable("MONTHS");

                entity.Property(e => e.Monthid)
                    .ValueGeneratedNever()
                    .HasColumnName("MONTHID");

                entity.Property(e => e.Monthname)
                    .HasMaxLength(50)
                    .HasColumnName("MONTHNAME");
            });

            modelBuilder.Entity<Person>(entity =>
            {
                entity.ToTable("PERSON");

                entity.Property(e => e.Personid)
                    .ValueGeneratedNever()
                    .HasColumnName("PERSONID");

                entity.Property(e => e.Deleted).HasColumnName("DELETED");

                entity.Property(e => e.Fullname)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("FULLNAME")
                    .IsFixedLength();

                entity.Property(e => e.Ismature).HasColumnName("ISMATURE");

                entity.Property(e => e.Note)
                    .HasMaxLength(255)
                    .HasColumnName("NOTE");

                entity.Property(e => e.Parentname)
                    .HasMaxLength(255)
                    .HasColumnName("PARENTNAME");

                entity.Property(e => e.Phone)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("PHONE");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}